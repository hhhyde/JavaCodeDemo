<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">


    <!-- 配置整合 mybatis 过程 -->

    <!--1、配置数据库相关参数 -->
    <context:property-placeholder location="classpath:secret.properties" ignore-unresolvable="true"/>


    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <!--执行时间超过 10秒 的就是慢SQL记录-->
        <property name="slowSqlMillis" value="10000"/>
        <!--将慢SQL打印出来-->
        <property name="logSlowSql" value="true"/>
    </bean>

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
        <property name="resultSetLogEnabled" value="false" />
    </bean>

    <!--2. 数据源 druid -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.account}"/>
        <property name="password" value="${db.passward}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${druid.pool.size.init}"/>
        <property name="minIdle" value="${druid.pool.size.min}"/>
        <property name="maxActive" value="${druid.pool.size.max}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="select null from dual" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 配置监控统计拦截的 filters，wall 用于防止 sql 注入，stat 用于统计分析, log4j支持日志打印, mergeStat合并SQL -->
        <!-- stat在最后则统计的SQL执行时间包含前面所有的filter执行时间 -->
        <property name="filters" value="wall,log4j,mergeStat,stat"/>
        <!--记录慢SQL-->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
                <ref bean="log-filter"/>
            </list>
        </property>
    </bean>


    <!--3、配置 SqlSessionFactory 对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置 mybatis 全局配置文件: mybatis-config.xml-->
        <property name="configLocation" value="classpath:/mybatis-configuration.xml"></property>
        <!-- 扫描 entity 包, 使用别名, 多个用; 隔开 -->
        <property name="typeAliasesPackage" value="com.example.webmvc.entity"/>
        <!-- 扫描 sql 配置文件: mapper 需要的 xml 文件 -->
        <property name="mapperLocations" value="classpath*:/mapper/*.xml"/>
    </bean>

    <!--4、配置扫描 Dao 接口包, 动态实现 DAO 接口, 注入到 spring 容器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 给出需要扫描的 Dao 接口 -->
        <property name="basePackage" value="com.example.webmvc.dao"/>
        <!-- 注入 SqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

</beans>